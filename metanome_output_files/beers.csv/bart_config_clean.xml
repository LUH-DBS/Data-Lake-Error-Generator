<task>
    <!-- ****************************************************
                      DATABASES
    **************************************************** -->
    <target> 
        <type>DBMS</type>
        <access-configuration>
            <driver>org.postgresql.Driver</driver>
            <uri>jdbc:postgresql://localhost:5433/bartdb</uri>
            <schema>target</schema>
            <login>postgres</login>
            <password>postgres</password>
        </access-configuration>
    </target>

    <!-- ****************************************************
                    DEPENDENCIES
    **************************************************** -->
    <dependencies><![CDATA[DCs: 

            e1: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $index1 == $index2, $id1 != $id2 -> #fail. 

        
            e2: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $index1 == $index2, $beername1 != $beername2 -> #fail. 

        
            e3: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $index1 == $index2, $breweryid1 != $breweryid2 -> #fail. 

        
            e4: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $index1 == $index2, $breweryname1 != $breweryname2 -> #fail. 

        
            e5: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $index1 == $index2, $city1 != $city2 -> #fail. 

        
            e6: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $index1 == $index2, $ibu1 != $ibu2 -> #fail. 

        
            e7: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $index1 == $index2, $style1 != $style2 -> #fail. 

        
            e8: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $index1 == $index2, $abv1 != $abv2 -> #fail. 

        
            e9: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $index1 == $index2, $state1 != $state2 -> #fail. 

        
            e10: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $index1 == $index2, $ounces1 != $ounces2 -> #fail. 

        
            e11: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $id1 == $id2, $index1 != $index2 -> #fail. 

        
            e12: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $id1 == $id2, $beername1 != $beername2 -> #fail. 

        
            e13: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $id1 == $id2, $breweryid1 != $breweryid2 -> #fail. 

        
            e14: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $id1 == $id2, $breweryname1 != $breweryname2 -> #fail. 

        
            e15: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $id1 == $id2, $city1 != $city2 -> #fail. 

        
            e16: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $id1 == $id2, $ibu1 != $ibu2 -> #fail. 

        
            e17: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $id1 == $id2, $style1 != $style2 -> #fail. 

        
            e18: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $id1 == $id2, $abv1 != $abv2 -> #fail. 

        
            e19: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $id1 == $id2, $state1 != $state2 -> #fail. 

        
            e20: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $id1 == $id2, $ounces1 != $ounces2 -> #fail. 

        
            e21: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $breweryid1 == $breweryid2, $breweryname1 != $breweryname2 -> #fail. 

        
            e22: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $breweryid1 == $breweryid2, $city1 != $city2 -> #fail. 

        
            e23: clean(index: $index1, id: $id1, beername: $beername1, style: $style1, ounces: $ounces1, abv: $abv1, ibu: $ibu1, breweryid: $breweryid1, breweryname: $breweryname1, city: $city1, state: $state1),
            clean(index: $index2, id: $id2, beername: $beername2, style: $style2, ounces: $ounces2, abv: $abv2, ibu: $ibu2, breweryid: $breweryid2, breweryname: $breweryname2, city: $city2, state: $state2),
                $breweryid1 == $breweryid2, $state1 != $state2 -> #fail. 

        ]]></dependencies>

    <!-- ****************************************************
                      CONFIGURATION
    **************************************************** -->
    <configuration>
        <!-- To print extra information in the ouput (default = false) -->
        <printLog>true</printLog>

        <!-- To load DB every time on start (default = false) -->
        <recreateDBOnStart>false</recreateDBOnStart>

        <!-- To apply the changes (default = false) -->
        <applyCellChanges>true</applyCellChanges>

        <!-- To  apply cell changes on a copy of the original target, with a custom suffix (default = true) -->
        <cloneTargetSchema>true</cloneTargetSchema>
        <cloneSuffix>_dirty</cloneSuffix>

        <!-- To export the dirty db -->
        <exportDirtyDB>true</exportDirtyDB>
        <exportDirtyDBPath>./</exportDirtyDBPath>
        <exportDirtyDBType>CSV</exportDirtyDBType>

        <!-- To export the changes -->
        <exportCellChanges>true</exportCellChanges>
        <exportCellChangesPath>clean_changes.csv</exportCellChangesPath>

        <!-- To compute an estimate of the reparability (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To generate all possible changes (default = false - slow, only for toy examples)-->
        <generateAllChanges>false</generateAllChanges>

        <!-- To avoid interactions among changes. (default = true) -->
        <avoidInteractions>true</avoidInteractions>

        <!-- To check, at the end of the process, if changes are detectable. (default = false) -->
        <checkChanges>true</checkChanges>

        <!-- To compute an estimate of the repairability. Requires checkChanges = true. (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To use an optimized strategy for updates. (default = true) -->
        <useDeltaDBForChanges>true</useDeltaDBForChanges>

        <!-- Error percentages for dependencies and comparisons 
        All percentages are wrt table sizes (# tuples) -->
        <errorPercentages>
            <defaultPercentage>0.0</defaultPercentage>
            <vioGenQueries>
            <vioGenQuery id="e1"><comparison>(index1 == index2)</comparison><percentage>0.16597510373443983</percentage></vioGenQuery><vioGenQuery id="e1"><comparison>(id1 != id2)</comparison><percentage>0.16597510373443983</percentage></vioGenQuery><vioGenQuery id="e2"><comparison>(index1 == index2)</comparison><percentage>0.16597510373443983</percentage></vioGenQuery><vioGenQuery id="e2"><comparison>(beername1 != beername2)</comparison><percentage>0.16597510373443983</percentage></vioGenQuery><vioGenQuery id="e3"><comparison>(index1 == index2)</comparison><percentage>0.16597510373443983</percentage></vioGenQuery><vioGenQuery id="e3"><comparison>(breweryid1 != breweryid2)</comparison><percentage>0.16597510373443983</percentage></vioGenQuery><vioGenQuery id="e4"><comparison>(index1 == index2)</comparison><percentage>0.16597510373443983</percentage></vioGenQuery><vioGenQuery id="e4"><comparison>(breweryname1 != breweryname2)</comparison><percentage>0.16597510373443983</percentage></vioGenQuery><vioGenQuery id="e5"><comparison>(index1 == index2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e5"><comparison>(city1 != city2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e6"><comparison>(index1 == index2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e6"><comparison>(ibu1 != ibu2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e7"><comparison>(index1 == index2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e7"><comparison>(style1 != style2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e8"><comparison>(index1 == index2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e8"><comparison>(abv1 != abv2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e9"><comparison>(index1 == index2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e9"><comparison>(state1 != state2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e10"><comparison>(index1 == index2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e10"><comparison>(ounces1 != ounces2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e11"><comparison>(id1 == id2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e11"><comparison>(index1 != index2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e12"><comparison>(id1 == id2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e12"><comparison>(beername1 != beername2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e13"><comparison>(id1 == id2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e13"><comparison>(breweryid1 != breweryid2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e14"><comparison>(id1 == id2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e14"><comparison>(breweryname1 != breweryname2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e15"><comparison>(id1 == id2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e15"><comparison>(city1 != city2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e16"><comparison>(id1 == id2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e16"><comparison>(ibu1 != ibu2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e17"><comparison>(id1 == id2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e17"><comparison>(style1 != style2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e18"><comparison>(id1 == id2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e18"><comparison>(abv1 != abv2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e19"><comparison>(id1 == id2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e19"><comparison>(state1 != state2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e20"><comparison>(id1 == id2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e20"><comparison>(ounces1 != ounces2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e21"><comparison>(breweryid1 == breweryid2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e21"><comparison>(breweryname1 != breweryname2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e22"><comparison>(breweryid1 == breweryid2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e22"><comparison>(city1 != city2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e23"><comparison>(breweryid1 == breweryid2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery><vioGenQuery id="e23"><comparison>(state1 != state2)</comparison><percentage>0.12448132780082988</percentage></vioGenQuery></vioGenQueries>
        </errorPercentages>

        <!-- To control the way in which changing the value -->
        <dirtyStrategies>
            <defaultStrategy>
                <strategy> TypoRandom </strategy>
            </defaultStrategy> 
            <!-- possible strategies
                <strategy chars="*" charsToAdd="3">TypoAddString</strategy>
                <strategy chars="*" charsToAdd="3">TypoAppendString</strategy>
                <strategy charsToRemove="3">TypoRemoveString</strategy>
                <strategy charsToSwitch="3">TypoSwitchValue</strategy>
                <strategy>TypoActiveDomain</strategy>
                <strategy>TypoRandom</strategy>
            -->
        </dirtyStrategies>

        <randomErrors>
            <tables>
                <table name="clean"> 
                    <percentage>3</percentage> <!-- Percentage is wrt attributes to dirty in the table -->
                    <attributes>
                    <attribute>beername</attribute><attribute>style</attribute><attribute>breweryname</attribute><attribute>city</attribute><attribute>state</attribute></attributes>
                </table>
            </tables>
        </randomErrors>
    
        <outlierErrors>
            <tables>
                <table name="clean">
                    <attributes>
                    <attribute percentage="0" detectable="true">index</attribute><attribute percentage="0" detectable="true">id</attribute><attribute percentage="0" detectable="true">ounces</attribute><attribute percentage="0" detectable="true">breweryid</attribute></attributes>
                </table>
            </tables>
        </outlierErrors>
        
        <!-- The following parameters are used to control the sampling process.
            All the fields are optional, but they may be crucial to obtain a good random sample.
            In order to choose the cells to modify, BART will scan the result of a viogen query
            using the following sampling algorithm:
            1) First, a number of tuples are skipped. This is a random number choosed btw 
                0 and (offsetFactor * tableSize)
            2) Then BART will scan the result and will pickup tuples 
            with a probability p = probabilityFactor.
            
            BART uses three kinds of queries
            - Symmetric queries: for symmetric viogen queries (see paper)
            - Inequality queries: for viogen queries without equalities (i.e. inequalities only)
            - Standard queries: for all other viogen queries
        -->
        <vioGenQueriesConfiguration>
            <!-- STANDARD QUERIES -->
            <probabilityFactorForStandardQueries>0.25</probabilityFactorForStandardQueries>
            <offsetFactorForStandardQueries>0.05</offsetFactorForStandardQueries>
            <!-- SYMMETRIC QUERIES -->
            <probabilityFactorForSymmetricQueries>0.25</probabilityFactorForSymmetricQueries>
            <offsetFactorForSymmetricQueries>0.05</offsetFactorForSymmetricQueries>
            <!-- INEQUALITY QUERIES -->
            <probabilityFactorForInequalityQueries>0.05</probabilityFactorForInequalityQueries>
            <offsetFactorForInequalityQueries>0.05</offsetFactorForInequalityQueries>
            <windowSizeFactorForInequalityQueries>1.5</windowSizeFactorForInequalityQueries>
        </vioGenQueriesConfiguration>

    </configuration>
</task>